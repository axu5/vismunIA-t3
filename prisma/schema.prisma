// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgres"
    // NOTE: When using postgresql, mysql or sqlserver, uncomment the @db.Text annotations in model Account below
    // Further reading:
    // https://next-auth.js.org/adapters/prisma#create-the-prisma-schema
    // https://www.prisma.io/docs/reference/api-reference/prisma-schema-reference#string
    url      = env("DATABASE_URL")
}


model Document {
    id              String       @id @default(cuid())
    docURI          String
    countryId       String
    country         Country      @relation(fields: [countryId], references: [id])
}

// Needed to have a balanced debate
enum Position {
    FOR
    AGAINST
    NEUTRAL
}

model Country {
    id            String       @id @default(cuid())
    name          String
    documents     Document[]
    position      Position
    topicId       String
    topic         Topic        @relation(fields: [topicId], references: [id])
    // Attendance of student id's
    attendanace   String[]
}

model Lesson {
    id            String       @id  @default(cuid())
    location      String
    date          DateTime
    // Only allow one lesson per day
    dateStr       String       @unique
    attendance    User[]
    topic         Topic        @relation(fields: [topicId], references: [id])
    topicId       String
}


model Topic {
    id              String       @id  @default(cuid())
    createdAt       DateTime     @default(now())
    title           String       @unique
    description     String       @default("No description")
    countries       Country[]
    sessions        Lesson[]
}

enum UserRole {
    STUDENT
    SECRETARY_GENERAL
    TEACHER
}

model User {
    id            String        @id @default(cuid())
    createdAt     DateTime      @default(now())
    updatedAt     DateTime      @updatedAt
    name          String
    email         String        @unique
    emailVerified DateTime?
    image         String?
    role          UserRole      @default(STUDENT)
    // Lesson id's for attendance
    attendance    Lesson[]
    
    // Next Auth things
    accounts      Account[]
    sessions      Session[]
}

// Necessary for Next auth -------------------------------
model Account {
    id                String   @id @default(cuid())
    userId            String  
    type              String
    provider          String
    providerAccountId String
    refresh_token     String?  @db.Text
    access_token      String?  @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String?  @db.Text
    session_state     String?
    user              User     @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
    id         String   @id @default(cuid())
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}
